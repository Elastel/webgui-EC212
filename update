#!/bin/bash
model=$(cat /etc/fw_model)
target=$(cat /etc/target_model)
bit=$(getconf LONG_BIT)
path="/var/www/html"

if [ ! -n "$model" ]; then
        model="EG500"
fi

if [ ! -n "$target" ]; then
        target=$model
fi

echo model:$model

if [ $model == "EG500" -o $model == "EG410" -o $model == "ElastBox400" ]; then
#check openvpn
        if ! type openvpn >/dev/null 2>&1; then
                echo "openvpn is NOT installed!"
                sudo apt-get install openvpn -y

                if [ $? -ne 0 ] ; then
                        echo "Failed to install openvpn."
                        exit 4
                fi
        fi

#check wireguard
        if ! type wg >/dev/null 2>&1; then
                echo "wireguard is NOT installed!"
                sudo apt-get install wireguard -y

                if [ $? -ne 0 ] ; then
                        echo "Failed to install wireguard."
                        exit 4
                fi
        fi

#close nft service
        sudo systemctl stop nftables.service
        sleep 1
        sudo systemctl disable nftables.service
fi

if [ $model != "EG324L" -a $model != "EC212" ]; then
        #check msmtp
        if ! type msmtp >/dev/null 2>&1; then
                echo "msmtp is NOT installed!"
                sudo apt-get install msmtp -y

                if [ $? -ne 0 ] ; then
                        echo "Failed to install msmtp."
                        exit 4
                fi
        fi
        #check mutt
        if ! type mutt >/dev/null 2>&1; then
                echo "mutt is NOT installed!"
                sudo apt-get install mutt -y

                if [ $? -ne 0 ] ; then
                        echo "Failed to install mutt."
                        exit 4
                fi
        fi

        if ! type dos2unix > /dev/null 2>&1; then
                echo "dos2unix is NOT installed!"
                sudo apt-get install dos2unix -y

                if [ $? -ne 0 ] ; then
                        echo "Failed to install dos2unix."
                        exit 4
                fi
        fi

        # check resolvconf
        resolvconf_path=/etc/resolvconf/resolv.conf.d/head
        resolvconf_cmd=$(which resolvconf)
        if [[ -e $resolvconf_path &&  -e $resolvconf_cmd ]]; then
                echo "$resolvconf_path" " is exist"
        else
                sudo apt-get install resolvconf -y
                if [ $? -ne 0 ] ; then
                        echo "Failed to install resolvconf."
                        exit 4
                fi
        fi

        if grep -q "nameserver 8.8.8.8" $resolvconf_path; then
                echo "nameserver exist"
        else
                echo -e "nameserver 8.8.8.8\nnameserver 8.8.4.4" >> $resolvconf_path
        fi
fi

sleep 1
if [ $model == "EG324" ]; then
        if [ ! -f /usr/lib/arm-linux-gnueabihf/libjson-c.so.4 ]; then
                sudo ln -s /usr/lib/arm-linux-gnueabihf/libjson-c.so /usr/lib/arm-linux-gnueabihf/libjson-c.so.4
        fi
fi

if [ "$1" == "reset" ]; then
    echo $1
    sudo cp $path/raspap.php /etc/raspap/raspap.php
    chown -R www-data:www-data /etc/raspap/raspap.php
    sudo cp $path/config/hostapd.conf /etc/hostapd/hostapd.conf
    if [ "$model" = "EG324" ]; then
        sed -i "s/nl80211/rtl871xdrv/g" /etc/hostapd/hostapd.conf
    fi
    sudo cp $path/config/90_raspap.conf /etc/sysctl.d/90_raspap.conf
    sudo sysctl -p /etc/sysctl.d/90_raspap.conf
    sudo cp $path/config/090_br0.conf /etc/dnsmasq.d/090_br0.conf
    sudo cp $path/config/dhcpcd.conf /etc/dhcpcd.conf
    sudo cp $path/config/Muttrc /etc/Muttrc
    sudo cp $path/config/msmtprc /etc/msmtprc
    sudo cp $path/config/defaults.json /etc/raspap/networking/
    sudo cp $path/Elastel/$model/etc/config/* /etc/config/
    sudo cp $path/Elastel/$model/etc/basic_station /etc/ -r
    sleep 1
    if [ $model != "EG324L" -a $model != "EC212" ]; then
        sudo cp $path/config/090_raspap.conf /etc/dnsmasq.d/090_raspap.conf
        sudo cp $path/Elastel/$model/etc/WebTunnelAgent.properties /etc/WebTunnelAgent.properties
        sudo cp $path/config/global_conf.json /etc/global_conf.json
        sudo cp $path/config/hostapd.service /lib/systemd/system/hostapd.service
        # reset wifi ssid
        sub_mac=$(ifconfig eth0 | grep ether | awk '{print $2}' | cut -f 5-6 -d ":" | tr -d ":")

        if [ ! -f /etc/udev/rules.d/99-wifi-hotplug.rules ]; then
                sudo cp $path/config/99-wifi-hotplug.rules /etc/udev/rules.d/
        fi
    else
        if [ -f /etc/init.d/S42htset ]; then
                sudo rm /etc/init.d/S42htset
                sudo rm -r /etc/htset
        fi

        sudo cp $path/config/edaemon.conf /etc/edaemon.conf
        sudo cp $path/Elastel/$model/etc/WebTunnelAgent.properties /etc/WebTunnelAgent.properties
        sub_mac=$(ifconfig eth0 | grep HWaddr | awk '{print $5}' | cut -f 5-6 -d ":" | tr -d ":")

        zonelist=$(ls /usr/share/zoneinfo/ | wc -l)
        if [[ $zonelist == "0" ]]; then
                tar xzvf $path/config/zoneinfo.tar.gz -C /usr/share/
        fi

        sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    fi
    

    ssid="$target"_"$sub_mac"
    sed -i "s/ssid.*/ssid=$ssid/" /etc/hostapd/hostapd.conf
    sudo /etc/raspap/lighttpd/configport.sh 80 '' /etc/lighttpd/lighttpd.conf
fi

sudo cp $path/config/cron-logrotate /etc/cron.d/
sudo cp $path/config/logrotate-rsyslog /etc/logrotate.d/rsyslog
sudo chown -R root:root /etc/logrotate.d/rsyslog
sudo cp $path/config/journald.conf /etc/systemd/journald.conf
sudo cp $path/config/elastel_config.json /etc/elastel_config.json
sudo cp $path/config/rules.v4 /etc/iptables/rules.v4
sudo cp $path/installers/service*.sh /etc/raspap/hostapd
sudo cp $path/installers/configport.sh /etc/raspap/lighttpd/
sudo cp $path/installers/bacnet_update /usr/sbin/
sudo cp $path/Elastel/$model/etc/init.d/* /etc/init.d/
sleep 1
if [ $model != "EG324L" -a $model != "EC212" ]; then
        sudo cp $path/config/090_raspap /etc/sudoers.d/090_raspap
        sudo chown -c root:www-data /etc/raspap/hostapd/*.sh
        sleep 1
        sudo rm /etc/rc5.d/S01init-wifi
        sudo rm /etc/rc5.d/S01terminal
        sudo rm /etc/rc5.d/S10failover
        sudo rm /etc/rc5.d/S10lte
        sudo rm /etc/rc5.d/S10dct
	sudo rm /etc/rc5.d/S10*daemon
        sudo rm /etc/rc5.d/S10ddns
        sudo rm /etc/rc5.d/S10macchina
        sudo rm /etc/rc5.d/S10gps
        sudo rm /etc/rc5.d/S10firewall
        sudo rm /etc/rc5.d/S10loragw
        sleep 1
        sudo ln -s /etc/init.d/init-wifi /etc/rc5.d/S01init-wifi
        sudo ln -s /etc/init.d/terminal /etc/rc5.d/S01terminal
        sudo ln -s /etc/init.d/failover /etc/rc5.d/S10failover
        sudo ln -s /etc/init.d/lte /etc/rc5.d/S10lte
        sudo ln -s /etc/init.d/dct /etc/rc5.d/S10dct
        sudo ln -s /etc/init.d/edaemon /etc/rc5.d/S10edaemon
        sudo ln -s /etc/init.d/ddns /etc/rc5.d/S10ddns
        sudo ln -s /etc/init.d/macchina /etc/rc5.d/S10macchina
        sudo ln -s /etc/init.d/gps /etc/rc5.d/S10gps
        sudo ln -s /etc/init.d/firewall /etc/rc5.d/S10firewall
        sudo ln -s /etc/init.d/loragw /etc/rc5.d/S10loragw
else
        result=$(ls /etc/ssl/certs/ | wc -l)
        if [[ $result == "0" ]]; then
                tar xzvf $path/config/certs.tar.gz -C /etc/ssl/
        fi
        sudo rm /etc/init.d/S90terminal
        sudo rm /etc/init.d/S90failover
        sudo rm /etc/init.d/S90lte
        sudo rm /etc/init.d/S90dct
        sudo rm /etc/init.d/S90edaemon
        sudo rm /etc/init.d/S90ddns
        sudo rm /etc/init.d/S90init-wifi
	sudo rm /etc/init.d/S90macchina
	sleep 1
        sudo ln -s /etc/init.d/terminal /etc/init.d/S90terminal
        sudo ln -s /etc/init.d/failover /etc/init.d/S90failover
        sudo ln -s /etc/init.d/lte /etc/init.d/S90lte
        sudo ln -s /etc/init.d/dct /etc/init.d/S90dct
        sudo ln -s /etc/init.d/edaemon /etc/init.d/S90edaemon
        sudo ln -s /etc/init.d/ddns /etc/init.d/S90ddns
	sudo ln -s /etc/init.d/init-wifi /etc/init.d/S90init-wifi
	sudo ln -s /etc/init.d/macchina /etc/init.d/S90macchina
fi

if [[ $model = "EG500" || $model = "EG410" || $model = "ElastBox400" ]]; then
        if [ ! -n "$(grep 'pcf8563' /boot/config.txt)"  ]; then
                echo "not pcf8563"
                sudo bash -c "echo 'dtoverlay=i2c-rtc,pcf8563' >> /boot/config.txt"
        fi
        sleep 1

        sudo rm /etc/rc5.d/S10loragw
        sudo ln -s /etc/init.d/loragw /etc/rc5.d/S10loragw
        sudo /etc/init.d/loragw stop
        sudo cp $path/installers/reset_lgw.sh /usr/sbin/
fi

sleep 1

if [ $model != "EG324" -a $model != "EG324L" -a $model != "EC212" ]; then
	echo -e "Start feed dog"
	sudo /var/www/html/installers/feed_dog.sh &
fi

sleep 1

[ -n "$(pgrep daemond)" ] && {
        sudo kill -9 $(pgrep daemond)
}

[ -n "$(pgrep edaemon)" ] && {
        sudo kill -9 $(pgrep edaemon)
}

sleep 1

if [[ $model = "EG324" || $model = "EG324L" ||  $model = "EC212" ]]; then
	echo V > /dev/watchdog
fi

sudo /etc/init.d/dct stop
sudo /etc/init.d/lte stop
sudo /etc/init.d/failover stop
sudo /etc/init.d/ddns stop
sudo /etc/init.d/terminal stop
sudo /etc/init.d/gps stop
sudo /etc/init.d/loragw stop
sudo /etc/init.d/bacnet_router stop

sleep 1

if [[ $bit = "64" || $model = "EG324" || $model = "EG324L" || $model = "EC212" ]]; then
	sudo cp -r $path/Elastel/$model/usr/* /usr/
elif [ $bit = "32" ]; then
	sudo cp -r $path/Elastel/$model/32/usr/* /usr/
fi

sleep 1

if [[ $bit = "64" || $model = "EG324" || $model = "EG324L" || $model = "EC212" ]]; then
        sudo cp $path/Elastel/$model/sbin/* /sbin/
elif [ $bit = "32" ]; then
        sudo cp $path/Elastel/$model/32/sbin/* /sbin/
fi

echo -e "Complete to update, it will reboot system."
echo $(date +%F%n%T) > /etc/fw_date
sleep 5
sudo reboot
